<?php

namespace Phx\Scrapers\Processors\Traits;

/**
 * @author Ammar Faizi <ammarfaizi2@gmail.com> https://www.facebook.com/ammarfaizi2
 * @package Phx\Scrapers\Processors\Traits
 * @license MIT
 * @version 0.0.1
 */
trait Indonesiatimur
{
	/**
	 * @return bool
	 */
	public function metaHandler(): bool
	{

		if (preg_match(
			"/(?:<title>)(.*)(?:<\/title>)/Usi",
			$this->html,
			$m
		)) {
			$this->title = $m[1];
			$this->title = explode("|", $this->title, 2);
			$this->title = trim(html_entity_decode($this->title[0], ENT_QUOTES," UTF-8"));
			if (strlen($this->title) < 8) {
				icelog("Could not get the title");
				icelog("Skipping...");
				return false;
			}
			icelog("Got title: %s", $this->title);
		} else {
			icelog("Could not get the title");
			icelog("Skipping...");
			return false;
		}

		if (preg_match(
			"/(?:<meta property=\"article\:published_time\" content=\")(.*)(?:\")/Usi",
			$this->html,
			$m
		)) {
			$this->datetime = trim(html_entity_decode($m[1], ENT_QUOTES, "UTF-8"));
			icelog("Got date and time: %s", $this->datetime);
		} else {
			icelog("Could not get date and time.");
		}

		if (preg_match(
			"/(?:<meta name=\"keywords\" content=\")(.*)(?:\")/Usi"
		)) {
			$tagsPointer = &$this->tags;
			$m[1] = explode(",", $m[1]);
			array_walk($m[1], function ($tag) use (&$tagsPointer) {
				$tag = trim(html_entity_decode($tag, ENT_QUOTES, "UTF-8"));
				if (! empty($tag)) {
					$tagsPointer[] = $tag;
				}
			});
			
		}

		die;
	}

	public function scrape(): bool
	{
		if ($this->metaHandler()) {
		}
		return false;
	}
}
